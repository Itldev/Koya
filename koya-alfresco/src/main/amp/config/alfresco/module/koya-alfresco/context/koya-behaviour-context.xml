<?xml version="1.0" encoding="UTF-8"?>
<!--

    Koya is an alfresco module that provides a corporate orientated dataroom.

    Copyright (C) Itl Developpement 2014

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see `<http://www.gnu.org/licenses/>`.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">
    
    <!-- ============== Permissions Behaviours ================ -->
    <!--Initialize default acl on dossier or space node creation-->
    <bean id="ApplyDefaultAclOnCreate" class="fr.itldev.koya.behaviour.security.ApplyDefaultAclOnCreate" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="subSpaceAclService" ref="subSpaceAclService" />
        <property name="koyaNodeService" ref="koyaNodeService" />
        <property name="policyComponent" ref="policyComponent" />
    </bean>
    
    <!-- Give KoyaResponsible Permission to owner on node creation-->
    <bean id="SetOwnerAsResponsibleOnCreate" class="fr.itldev.koya.behaviour.security.SetOwnerAsResponsibleOnCreate" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="SubSpaceCollaboratorsAclService" ref="SubSpaceCollaboratorsAclService" />
        <property name="koyaNodeService" ref="koyaNodeService" />
        <property name="nodeService" ref="NodeService" />
        <property name="policyComponent" ref="policyComponent" />
    </bean>
    
    <!--revoke Koya specific permissions on dossier or space before delete -->
    <bean id="RevokeKoyaPermissionsBeforeDelete"
          class="fr.itldev.koya.behaviour.security.RevokeKoyaPermissionsBeforeDelete" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="subSpaceAclService" ref="subSpaceAclService" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="koyaNodeService" ref="koyaNodeService" />
    </bean>
    
    
    <!-- Update parent node after grant subspace permission -->
    <bean id="UpdateParentNodesAfterGrantKoyaPermission"
          class="fr.itldev.koya.behaviour.security.UpdateParentNodesAfterGrantKoyaPermission" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="subSpaceAclService" ref="subSpaceAclService" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="koyaNodeService" ref="koyaNodeService" />
        <property name="nodeService" ref="NodeService" />
        <property name="permissionService" ref="PermissionService"/>
    </bean>
    
    
    <!--Update parent node before revoke subspace permission--> 
    <bean id="UpdateParentNodesBeforeRevokeKoyaPermission"
          class="fr.itldev.koya.behaviour.security.UpdateParentNodesBeforeRevokeKoyaPermission" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="subSpaceAclService" ref="subSpaceAclService" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="koyaNodeService" ref="koyaNodeService" />
        <property name="nodeService" ref="NodeService" />
        <property name="permissionService" ref="PermissionService"/>
        <property name="siteService" ref="SiteService"/>
    </bean>
    
           
                  
                         
                                
                                       
                                                     
    
    
    <bean id="PersonMailUnicityBehaviour" class="fr.itldev.koya.behaviour.PersonMailUnicityBehaviour" 
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap" >        
        <property name="policyComponent" ref="policyComponent" />
        <property name="nodeService" ref="NodeService"/>
    </bean>
    
    <bean id="InstantNotificationMaintainerBehaviour" class="fr.itldev.koya.behaviour.InstantNotificationMaintainerBehaviour"
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap">
        <property name="policyComponent" ref="policyComponent" />
        <property name="emailNotificationService" ref="emailNotificationService"/>
        <property name="userService" ref="userService"/>
    </bean>
    
    <bean id="ShareNotificationBehaviour" class="fr.itldev.koya.behaviour.ShareNotificationBehaviour"
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap">
        <property name="policyComponent" ref="policyComponent" />
       
    </bean>
    
    
    <!-- Send Email notification to share invitee     
    -->
    <bean id="ShareMailNotificationBehaviour" class="fr.itldev.koya.behaviour.ShareMailNotificationBehaviour"
          init-method="init" depends-on="fr.itldev.koya.dictionaryBootstrap">
        <property name="policyComponent" ref="policyComponent" />
        <property name="templatePath">
            <value>${koya.template.share-notification}</value>
        </property>
        <property name="i18nPropertiesPath">
            <value>${koya.i18n.mail}</value>
        </property>
        <property name="contentService" ref="contentService"/>
        <property name="actionService" ref="actionService" />
        <property name="koyaNodeService" ref="koyaNodeService" />       
    </bean>
    
    
</beans>
